name: Terraform Deployment
on:
  push:
    branches:
      - main

permissions:
    id-token: write
    contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
        # - name: 'azure CLI login using OIDC'
        #   uses: azure/login@v1
        #   with:
        #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
        #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
        - name: checkout repository
          uses: actions/checkout@v3
  
        - name: set up terraform
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_wrapper: false

        - name: terraform init db
          run: terraform init
          working-directory: ./db
          
        - name: terraform plan db
          run: terraform plan
          working-directory: ./db

        - name: terraform apply db
          working-directory: ./db
          run: | 
            terraform apply -auto-approve
            echo "COSMOSDB_CONNECTION_STRING=$(terraform output -json cosmosdb_connection_string)" >> "$GITHUB_ENV"
            echo "COSMOSDB_DATABASE_NAME=$(terraform output -raw cosmosdb_sql_database)" >> "$GITHUB_ENV"
            echo "COSMOSDB_CONTAINER_NAME=$(terraform output -raw cosmosdb_sql_container_restaurants)" >> "$GITHUB_ENV"

        - name: terraform init function
          run: terraform init
          working-directory: ./function
          
        - name: terraform plan function
          run: terraform plan
          working-directory: ./function

        - name: terraform apply function
          working-directory: ./function
          run: | 
            terraform apply -auto-approve
            echo "FUNCTION_APP_NAME=$(terraform output -raw function_app_name)" >> "$GITHUB_ENV"
            echo "FUNCTION_APP_RESOURCE_GROUP=$(terraform output -raw resource_group_name)" >> "$GITHUB_ENV"
            echo "FUNCTION_APP_PRIMARY_WEB_HOST=$(terraform output -raw primary_web_host)" >> "$GITHUB_ENV"

        - name: Embed API Url In index.html
          shell: bash
          run: |
            export API_URL="https://${{ env.FUNCTION_APP_PRIMARY_WEB_HOST }}"
            envsubst < index.html

        # - name: Embed API Url In index.html
        #   uses: nowactions/envsubst@v1
        #   with:
        #     input: ./site/index.html.tmpl
        #     output: ./index.html
        #   env:
        #     API_URL: "https://${{ env.FUNCTION_APP_PRIMARY_WEB_HOST }}"

        - name: terraform init site
          run: terraform init
          working-directory: ./site
            
        - name: terraform plan site
          run: terraform plan
          working-directory: ./site

        - name: terraform apply site
          working-directory: ./site
          run: | 
            terraform apply -auto-approve

  
name: Terraform Deployment
on:
  push:
    branches:
      - main

permissions:
    id-token: write
    contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
        - name: 'Az CLI login using OIDC'
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
        - name: Checkout Repository
          uses: actions/checkout@v2
  
        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_wrapper: false

        - name: TFInit
          run: terraform init
          working-directory: ./db
          
        # - name: TFPlan
        #   run: terraform plan
        #   working-directory: ./db

        - name: TFApply
          id: tfapply
          working-directory: ./db
          run: | 
            terraform apply -auto-approve
            echo "COSMOS_CONNECTION_STRING=$(terraform output -json cosmosdb_connection_string)" >> "$GITHUB_ENV"
            echo "COSMOSDB_DATABASE_NAME=$(terraform output -raw cosmosdb_sql_database)" >> "$GITHUB_ENV"
            echo "COSMOSDB_CONTAINER_NAME=$(terraform output -raw cosmosdb_sql_container_restaurants)" >> "$GITHUB_ENV"

          #TODO terraform the other 2 componets, use db connection string for function
          #output function url fo site

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.11


        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install azure-cosmos
          working-directory: ./db

        - name: Run seeding script
          run: |
            python ./seed.py \
            --cosmosdb-connection-string "${{ env.COSMOS_CONNECTION_STRING }}" \
            --database-name "${{ env.COSMOSDB_DATABASE_NAME }}" \
            --container-name "${{ env.COSMOSDB_CONTAINER_NAME}}"
          working-directory: ./db
          env:
            PYTHONPATH: "./"
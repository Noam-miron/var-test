name: Terraform Deployment
on:
  push:
    branches:
      - main

permissions:
    id-token: write
    contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
        - name: 'azure CLI login using OIDC'
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
        - name: checkout repository
          uses: actions/checkout@v2
  
        - name: set up terraform
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_wrapper: false

        # - name: terraform init db
        #   run: terraform init
        #   working-directory: ./db
          
        # - name: terraform plan db
        #   run: terraform plan
        #   working-directory: ./db

        # - name: terraform apply db
        #   working-directory: ./db
        #   run: | 
        #     terraform apply -auto-approve
        #     echo "COSMOSDB_CONNECTION_STRING=$(terraform output -json cosmosdb_connection_string)" >> "$GITHUB_ENV"
        #     echo "COSMOSDB_DATABASE_NAME=$(terraform output -raw cosmosdb_sql_database)" >> "$GITHUB_ENV"
        #     echo "COSMOSDB_CONTAINER_NAME=$(terraform output -raw cosmosdb_sql_container_restaurants)" >> "$GITHUB_ENV"

        # - name: set up python
        #   uses: actions/setup-python@v2
        #   with:
        #     python-version: 3.11

        # - name: install dependencies
        #   run: |
        #     python -m pip install --upgrade pip
        #     pip install azure-cosmos
        #   working-directory: ./db

        # - name: run db seeding script
        #   run: |
        #     python ./seed.py \
        #     --cosmosdb-connection-string "${{ env.COSMOSDB_CONNECTION_STRING }}" \
        #     --database-name "${{ env.COSMOSDB_DATABASE_NAME }}" \
        #     --container-name "${{ env.COSMOSDB_CONTAINER_NAME }}"
        #   working-directory: ./db
        #   env:
        #     PYTHONPATH: "./"

        - name: terraform init function
          run: terraform init
          working-directory: ./function
          
        - name: terraform plan function
          run: terraform plan
          working-directory: ./function

        - name: terraform apply function
          working-directory: ./function
          run: | 
            terraform apply -auto-approve
            echo "FUNCTION_APP_NAME=$(terraform output -raw function_app_name)" >> "$GITHUB_ENV"
            echo "FUNCTION_APP_RESOURCE_GROUP=$(terraform output -raw resource_group_name)" >> "$GITHUB_ENV"
        
        - name: Build and Package Azure Function
          working-directory: ./function/src
          run: |
            zip -r function.zip .
          shell: bash
    
        - name: Upload Artifact
          uses: actions/upload-artifact@v2
          with:
            name: function-artifact
            path: ./function/src/function.zip

        - name: Download Artifact
          uses: actions/download-artifact@v2
          with:
            name: function-artifact
            path: ./function/src
    
        - name: Deploy to Azure Function
          uses: azure/webapps-deploy@v2
          with:
            app-name: "${{ env.FUNCTION_APP_NAME }}"
            publish-profile: "${{ secrets.AZURE_FUNCTION_APP_PUBLISH_PROFILE }}"
            package: ./function/src/function.zip
        
        - name: Set function Environment Variables
          run: |
            az functionapp config appsettings set --name "${{ env.FUNCTION_APP_NAME }}" \
            --resource-group "${{ env.FUNCTION_APP_RESOURCE_GROUP }}" \
            --settings  COSMOS_CONNECTION_STRING="${{ env.COSMOSDB_CONNECTION_STRING }}" \
            COSMOSDB_DATABASE_NAME="${{ env.COSMOSDB_DATABASE_NAME }}" \
            COSMOSDB_CONTAINER_NAME="${{ env.COSMOSDB_CONTAINER_NAME }}"
        
        # - name: terraform init site
        #   run: terraform init
        #   working-directory: ./site
            
        # - name: terraform plan site
        #   run: terraform plan
        #   working-directory: ./site

        # - name: terraform apply site
        #   working-directory: ./site
        #   run: | 
        #     terraform apply -auto-approve
        #     # echo "COSMOS_CONNECTION_STRING=$(terraform output -json cosmosdb_connection_string)" >> "$GITHUB_ENV"
        #     # echo "COSMOSDB_DATABASE_NAME=$(terraform output -raw cosmosdb_sql_database)" >> "$GITHUB_ENV"
        #     # echo "COSMOSDB_CONTAINER_NAME=$(terraform output -raw cosmosdb_sql_container_restaurants)" >> "$GITHUB_ENV"

          #TODO embed function url fo site